# Part A :-
import java.util.*;

public class AutoboxingSum {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> numbers = new ArrayList<>();

        System.out.println("Enter integers separated by space (type 'end' to stop):");

        while (sc.hasNext()) {
            String input = sc.next();
            if (input.equalsIgnoreCase("end")) break;

            try {
                int value = Integer.parseInt(input);
                numbers.add(value);
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter integers only.");
            }
        }

        int sum = 0;
        for (Integer num : numbers) {
            sum += num; 
        }

        System.out.println("Numbers entered: " + numbers);
        System.out.println("Sum of integers: " + sum);

        sc.close();
    }
}

# Part - B :-

import java.io.*;
import java.util.Scanner;

class Student implements Serializable {
    private int studentID;
    private String name;
    private char grade;

    public Student(int studentID, String name, char grade) {
        this.studentID = studentID;
        this.name = name;
        this.grade = grade;
    }

    public void display() {
        System.out.println("StudentID: " + studentID + ", Name: " + name + ", Grade: " + grade);
    }
}

public class StudentMain {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter Student ID: ");
        int id = sc.nextInt();
        sc.nextLine();  

        System.out.print("Enter Student Name: ");
        String name = sc.nextLine();

        System.out.print("Enter Student Grade (A/B/C): ");
        char grade = sc.next().charAt(0);

        Student s1 = new Student(id, name, grade);

        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("student.dat"))) {
            oos.writeObject(s1);
            System.out.println("Student serialized and saved to student.dat");
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("student.dat"))) {
            Student s2 = (Student) ois.readObject();
            System.out.println("Student deserialized successfully:");
            s2.display();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }

        sc.close();
    }
}

# Part - c :-

import java.io.*;
import java.util.Scanner;

public class EmployeeManagementSystem {
    private static final String FILE_NAME = "employees.dat";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int choice;
        do {
            System.out.println("\n1. Add Employee");
            System.out.println("2. Display All Employees");
            System.out.println("3. Exit");
            System.out.print("Enter choice: ");
            choice = Integer.parseInt(sc.nextLine());

            switch (choice) {
                case 1: addEmployee(sc); break;
                case 2: displayEmployees(); break;
                case 3: System.out.println("Exiting..."); break;
                default: System.out.println("Invalid choice!"); break;
            }
        } while (choice != 3);
        sc.close();
    }

    private static void addEmployee(Scanner sc) {
        try (FileOutputStream fos = new FileOutputStream(FILE_NAME, true);
             AppendableObjectOutputStream oos = new AppendableObjectOutputStream(fos)) {
            System.out.print("Enter Employee ID: ");
            int id = Integer.parseInt(sc.nextLine());
            System.out.print("Enter Employee Name: ");
            String name = sc.nextLine();
            System.out.print("Enter Designation: ");
            String designation = sc.nextLine();
            System.out.print("Enter Salary: ");
            double salary = Double.parseDouble(sc.nextLine());
            Employee emp = new Employee(id, name, designation, salary);
            oos.writeObject(emp);
            System.out.println("Employee added successfully!");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void displayEmployees() {
        try (FileInputStream fis = new FileInputStream(FILE_NAME);
             ObjectInputStream ois = new ObjectInputStream(fis)) {
            while (true) {
                Employee emp = (Employee) ois.readObject();
                emp.display();
            }
        } catch (EOFException e) {
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}

class AppendableObjectOutputStream extends ObjectOutputStream {
    public AppendableObjectOutputStream(OutputStream out) throws IOException { super(out); }
    @Override
    protected void writeStreamHeader() throws IOException {
        File file = new File("employees.dat");
        if (file.length() == 0) super.writeStreamHeader();
        else reset();
    }
}
